<?_c
# This code was forked from the LiveJournal project owned and operated
# by Live Journal, Inc. The code has been modified and expanded by
# Dreamwidth Studios, LLC. These files were originally licensed under
# the terms of the license supplied by Live Journal, Inc, which can
# currently be found at:
#
# http://code.livejournal.org/trac/livejournal/browser/trunk/LICENSE-LiveJournal.txt
#
# In accordance with the original license, this code and all its
# modifications are provided under the GNU General Public License.
# A copy of that license can be found in the LICENSE file included as
# part of this distribution.
_c?>
<?_code
{
    use strict;
    use vars qw(%GET %POST $title $headextra @errors @warnings);
    use LJ::Auth;
    use LJ::EmbedModule;

    # this can only be accessed from the embed module subdomain
    my $r = DW::Request->get;
    return "This page cannot be viewed from $LJ::DOMAIN"
        unless $r->header_in("Host") =~ /.*$LJ::EMBED_MODULE_DOMAIN$/i;

    # we should have three GET params: journalid, moduleid, auth_token
    my $journalid = $GET{journalid}+0 or return "No journalid specified";
    my $moduleid  = $GET{moduleid};
    return "No module id specified" unless defined $moduleid;
    $moduleid += 0;
    my $preview = $GET{preview};
    # check auth_token
    return "Invalid auth string" unless
        LJ::Auth->check_sessionless_auth_token('embedcontent', %GET);

    # ok we're cool, return content
    my $content = LJ::EmbedModule->module_content(
        journalid => $journalid,
        moduleid  => $moduleid,
        preview => $preview,
    );

    return qq {
        <html><head><style type="text/css">html, body { background-color:transparent; padding:0; margin:0; border:0; overflow:hidden; }</style></head><body>$content</body></html>
    };
}
_code?>
