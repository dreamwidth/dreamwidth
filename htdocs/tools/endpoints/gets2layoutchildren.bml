<?_c
# This code was forked from the LiveJournal project owned and operated
# by Live Journal, Inc. The code has been modified and expanded by
# Dreamwidth Studios, LLC. These files were originally licensed under
# the terms of the license supplied by Live Journal, Inc, which can
# currently be found at:
#
# http://code.livejournal.org/trac/livejournal/browser/trunk/LICENSE-LiveJournal.txt
#
# In accordance with the original license, this code and all its
# modifications are provided under the GNU General Public License.
# A copy of that license can be found in the LICENSE file included as
# part of this distribution.
_c?>
<?_code # -*-bml-*-
{
    use strict;
    use LJ::JSON;
    use vars qw(%GET);

    my $err = sub {
        my $msg = shift;
        return to_json({
            'alert' => $msg,
        });
    };

    my $remote = LJ::get_remote();
    return $err->("Sorry, you must be logged in to use this feature.")
        unless $remote;

    my $authas = $GET{'authas'} || $remote->{user};
    my $u = LJ::get_authas_user($authas);
    return $err->("You could not be authenticated as the specified user.")
        unless $u;

    my $pub = LJ::S2::get_public_layers();
    my $layoutid = $GET{'s2_layoutid'};

    my $default_theme_text = BML::ml('/customize/index.bml.s2.customize.themes.default');
    my $can_use_layout = $pub->{$layoutid} ? LJ::S2::can_use_layer($u, $pub->{$layoutid}->{'uniq'}) : 1;

    my @themes = {
        value => "0",
        text => $can_use_layout ? $default_theme_text : "$default_theme_text*",
        disabled => $can_use_layout ? 0 : 1,
    };
    push @themes, LJ::S2::get_layout_themes_select([$pub], $layoutid, $u);
    my @langs  = ("0", BML::ml('/customize/index.bml.s2.customize.language.default'));
    push @langs, LJ::S2::get_layout_langs($pub, $layoutid);

    sleep 1 if $LJ::IS_DEV_SERVER;

    return to_json({ 'themes' => \@themes,
                             'langs'  => \@langs, });
}
_code?>
