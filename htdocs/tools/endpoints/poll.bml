<?_c
# This code was forked from the LiveJournal project owned and operated
# by Live Journal, Inc. The code has been modified and expanded by
# Dreamwidth Studios, LLC. These files were originally licensed under
# the terms of the license supplied by Live Journal, Inc, which can
# currently be found at:
#
# http://code.livejournal.org/trac/livejournal/browser/trunk/LICENSE-LiveJournal.txt
#
# In accordance with the original license, this code and all its
# modifications are provided under the GNU General Public License.
# A copy of that license can be found in the LICENSE file included as
# part of this distribution.
_c?>
<?_code # -*-bml-*-
{
    use strict;
    use vars qw(%POST);
    use LJ::JSON;

    my $ret = {};

    my $err = sub {
        my $msg = shift;
        return to_json({
            error => "Error: $msg",
        });
    };

    BML::set_content_type('text/javascript; charset=utf-8');
    BML::finish();
    BML::noparse();

    my $pollid   = $POST{pollid}  or return $err->("No pollid");
    my $pollqid  = $POST{pollqid} || 0;
    my $userid   = $POST{userid} || 0;
    my $action   = $POST{action};
    my $page     = $POST{page};
    my $pagesize = $POST{pagesize} || 2000;

    my $poll = LJ::Poll->new($pollid) or return $err->("Error loading poll $pollid");

    # make sure this poll is visible to the remote user
    my $remote = LJ::get_remote();
    unless ($poll->can_view($remote)) {
        return $err->("You cannot view this poll");
    }

    if ($action eq 'get_answers') {
        return $err->( "No pollqid" ) unless $pollqid;

        my $question = $poll->question($pollqid) or return $err->("Error loading question $pollqid");
        my $pages    = $question->answers_pages($poll->journalid, $pagesize);
        $ret->{paging_html} = $question->paging_bar_as_html($page, $pages, $pagesize, $poll->journalid, $pollid, $pollqid);
        $ret->{answer_html} = $question->answers_as_html($poll->journalid, $poll->isanon, $page, $pagesize, $pages);
    } elsif ( $action eq 'get_respondents' ) {
        $ret->{answer_html} = $poll->respondents_as_html;
    }  elsif ($action eq 'get_user_answers') {
        return $err->( "No userid" ) unless $userid;

        $ret->{answer_html} = $poll->user_answers_as_html( $userid );
    } else {
        return $err->("Invalid action $action");
    }

    $ret = {
        %$ret,
        pollid  => $pollid,
        pollqid => $pollqid,
        userid  => $userid,
        page    => $page,
    };

    sleep(1.5) if $LJ::IS_DEV_SERVER;

    return to_json( $ret );
}
_code?>
