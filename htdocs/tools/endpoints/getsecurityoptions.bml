<?_c
# This code was forked from the LiveJournal project owned and operated
# by Live Journal, Inc. The code has been modified and expanded by
# Dreamwidth Studios, LLC. These files were originally licensed under
# the terms of the license supplied by Live Journal, Inc, which can
# currently be found at:
#
# http://code.livejournal.org/trac/livejournal/browser/trunk/LICENSE-LiveJournal.txt
#
# In accordance with the original license, this code and all its
# modifications are provided under the GNU General Public License.
# A copy of that license can be found in the LICENSE file included as
# part of this distribution.
_c?>
<?_code # -*-bml-*-
{
    use strict;
    use JSON;
    use vars qw(%GET);

    my $err = sub {
        my $msg = shift;
        return to_json({
            'alert' => $msg,
        });
    };

    my $remote = LJ::get_remote();
    my $user = $GET{user};
    my $u = LJ::load_user($user);

    return to_json({}) unless $u;

    my %ret = (
        is_comm => $u->is_comm ? 1 : 0,
        can_manage =>  $remote && $remote->can_manage( $u ) ? 1 : 0,
    );

    return to_json({ ret => \%ret }) unless $remote && $remote->can_post_to($u);

    unless ($ret{is_comm}) {
        my $friend_groups = $u->trust_groups;
        $ret{friend_groups_exist} = keys %$friend_groups ? 1 : 0;
    }

    $ret{minsecurity} = $u->newpost_minsecurity;

    return to_json({ ret => \%ret });
}
_code?>
