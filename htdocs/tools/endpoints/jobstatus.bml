<?_c
# This code was forked from the LiveJournal project owned and operated
# by Live Journal, Inc. The code has been modified and expanded by
# Dreamwidth Studios, LLC. These files were originally licensed under
# the terms of the license supplied by Live Journal, Inc, which can
# currently be found at:
#
# http://code.livejournal.org/trac/livejournal/browser/trunk/LICENSE-LiveJournal.txt
#
# In accordance with the original license, this code and all its
# modifications are provided under the GNU General Public License.
# A copy of that license can be found in the LICENSE file included as
# part of this distribution.
_c?>
<?_code # -*-bml-*-
{
    use strict;
    use vars qw(%POST);
    use LJ::JSON;

    my $err = sub {
        my $msg = shift;
        return to_json({
            error => "Error: $msg",
        });
    };

    BML::set_content_type('text/javascript; charset=utf-8');
    BML::finish();
    BML::noparse();

    my $taskhandle = $POST{'taskhandle'}
        or return $err->("Invalid task handle");

    my $storage = LJ::WorkerResultStorage->new(handle => $taskhandle);
    my %status = $storage->status
        or return $err->("No such task");

    my $prog = $status{progress} || [0,0];
    my $running = $status{status} eq 'running';
    my $percent = $status{percent};

    my $ret = {
        nu      => $prog->[0],
        de      => $prog->[1],
        percent => $percent,
        running => $running,
        taskhandle => $taskhandle,
    };

    unless ($running) {
        foreach my $field (qw(status result start_time end_time)) {
            $ret->{$field} = $status{$field};
        }
    }

    sleep(2) if $LJ::IS_DEV_SERVER;

    return to_json( $ret );
}
_code?>
