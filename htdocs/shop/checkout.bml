<?_c
#
# shop/checkout.bml
#
# Checkout page for letting the user initiate a checkout process.
#
# Authors:
#      Mark Smith <mark@dreamwidth.org>
#      Janine Smith <janine@netrophic.com>
#
# Copyright (c) 2009 by Dreamwidth Studios, LLC.
#
# This program is free software; you may redistribute it and/or modify it under
# the same terms as Perl itself. For a copy of the license, please reference
# 'perldoc perlartistic' or 'perldoc perlgpl'.
#
_c?><?page
body<=
<?_code
{
    use strict;
    use vars qw/ %GET %POST $title /;

    return BML::redirect( "$LJ::SITEROOT/" )
        unless LJ::is_enabled( 'payments' );

    $title = $ML{'.title'};

    # this page uses new style JS
    LJ::need_res( 'stc/shop.css' );
    LJ::set_active_resource_group( 'jquery' );

    my $err = DW::Shop->remote_sysban_check;
    return $err if $err;

    # get their shop/cart
    my $cart = DW::Shop->get->cart;
    return $ML{'.error.nocart'}
        unless $cart;
    return $ML{'.error.emptycart'}
        unless $cart->has_items;

    # FIXME: if they have a $0 cart, we don't support that yet
    return $ML{'.error.zerocart'}
        if $cart->total_cash == 0.00 && $cart->total_points == 0;

    # establish the engine they're trying to use
    my $eng = DW::Shop::Engine->get( $GET{method}, $cart );
    return $ML{'.error.invalidpaymentmethod'}
        unless $eng;

    # set the payment method on the cart
    $cart->paymentmethod( $GET{method} );

    # redirect to checkout url
    my $url = $eng->checkout_url;
    return $eng->errstr
        unless $url;
    return BML::redirect( $url );
}
_code?>
<=body
title=><?_code return $title; _code?>
page?>
