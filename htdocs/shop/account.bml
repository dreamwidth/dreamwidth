<?_c
#
# /shop/account.bml
#
# This is the page where a person can choose to buy a paid account for
# themself, another user, or a new user.
#
# Authors:
#      Mark Smith <mark@dreamwidth.org>
#      Janine Smith <janine@netrophic.com>
#
# Copyright (c) 2009 by Dreamwidth Studios, LLC.
#
# This program is free software; you may redistribute it and/or modify it under
# the same terms as Perl itself. For a copy of the license, please reference
# 'perldoc perlartistic' or 'perldoc perlgpl'.
#
_c?><?page
body<=
<?_code
{
    use strict;
    use vars qw/ %GET %POST $title /;

    return BML::redirect( "$LJ::SITEROOT/" )
        unless LJ::is_enabled( 'payments' );

    # this page uses new style JS
    LJ::need_res( 'stc/shop.css' );
    LJ::set_active_resource_group( 'jquery' );

    # let's see what they're trying to do
    my $for = $GET{for};
    return BML::redirect( "$LJ::SITEROOT/shop" )
        unless $for && $for =~ /^(?:self|gift|new|random)$/;

    $title = $ML{'.title'};

    # ensure they have a user if it's for self
    my $remote = LJ::get_remote();
    return $ML{'.error.invalidself'}
        if $for eq 'self' && ( !$remote || !$remote->is_personal );

    my $err = DW::Shop->remote_sysban_check;
    return $err if $err;

    my $account_type = DW::Pay::get_account_type( $remote );
    return $ML{'.error.invalidself.perm'}
        if $for eq 'self' && $account_type eq 'seed';

    my $ret = "<p><a href='$LJ::SITEROOT/shop'>&lt;&lt; " . BML::ml( '.backlink', { sitename => $LJ::SITENAMESHORT } ) . "</a></p>";

    # hack in cart status here ... will be easy once this page is TTd
    {
        my $shop = DW::Shop->get;
        $ret .= DW::Template->template_string( 'shop/cartdisplay.tt', { shop => $shop, cart => $shop->cart, remote => $remote } );
    }

    if ( $for eq 'self' ) {
        $ret .= "<div class='leftybox'>" . BML::ml( '.intro.self', { user => $remote->ljuser_display, aopts => "href='$LJ::HELPURL{paidaccountinfo}'" } ) . "</div>";
        $ret .= DW::Widget::PaidAccountStatus->render;
    } elsif ( $for eq 'gift' ) {
        $ret .= "<p>" . BML::ml( '.intro.gift', { aopts => "href='$LJ::HELPURL{paidaccountinfo}'" } ) . "</p>";
    } elsif ( $for eq 'random' ) {
        $ret .= "<p>" . BML::ml( '.intro.random', { aopts => "href='$LJ::HELPURL{paidaccountinfo}'" } ) . "</p>";
    } else { # $for eq 'new'
        $ret .= "<p>" . BML::ml( '.intro.new', { aopts => "href='$LJ::HELPURL{paidaccountinfo}'" } ) . "</p>";
    }

    my $post_fields = {};
    my $email_checkbox;
    if ( LJ::did_post() ) {
        return "<?h1 $ML{'Error'} h1?><?p $ML{'error.invalidform'} p?>"
            unless LJ::check_form_auth();

        my $error;
        $post_fields = LJ::Widget::ShopItemOptions->post_fields( \%POST );
        if ( keys %$post_fields ) { # make sure the user selected an account type
            # need to do this because all of these form fields are in the BML page instead of in the widget
            LJ::Widget->use_specific_form_fields( post => \%POST,
                                                  widget => "ShopItemOptions",
                                                  fields => [ qw( for username email deliverydate_mm deliverydate_dd deliverydate_yyyy anonymous reason alreadyposted force_spelling ) ] );
            my %from_post = LJ::Widget->handle_post( \%POST, 'ShopItemOptions' => { email_checkbox => \$email_checkbox } );
            $error = $from_post{error} if $from_post{error};
        } else {
            $error = $ML{'.error.noselection'};
        }

        if ( $error ) {
            $ret .= qq{<div class="error-box">$error</div>};
        } else {
            return BML::redirect( "$LJ::SITEROOT/shop" );
        }
    }

    $ret .= "<div style='clear: both;'></div>";
    $ret .= "<form method='post'>";
    $ret .= LJ::form_auth();
    $ret .= "<table summary='' class='shop-table'><tr>";
    $ret .= "<td>" . LJ::Widget::ShopItemOptions->render( option_name => 'accttype', item => 'prem', post => $post_fields ) . "</td>";
    $ret .= "<td>" . LJ::Widget::ShopItemOptions->render( option_name => 'accttype', item => 'paid', post => $post_fields ) . "</td>"
        if $for ne 'self' || DW::Shop::Item::Account->allow_account_conversion( $remote, 'paid' );
    $ret .= "</tr>";

    if ( DW::Pay::num_permanent_accounts_available() > 0 ) {
        $ret .= "<tr><td colspan='2'>";
        $ret .= LJ::Widget::ShopItemOptions->render( option_name => 'accttype', item => 'seed', post => $post_fields );
        $ret .= "</td></tr>";
    }

    $ret .= "</table>";

    if ( $for =~ /^(?:gift|new|random)$/ ) {
        $ret .= "<table summary='' class='shop-table-gift'>";

        if ( $for eq 'gift' ) {
            $ret .= "<tr><td>$ML{'.giftfor.username'}</td><td>" . LJ::html_text( { name => 'username', value => LJ::ehtml( $POST{username} || $GET{user} ) } ) . "</td></tr>";
        } elsif ( $for eq 'random' ) {
            if ( my $username = LJ::ehtml( $GET{user} ) ) {
                my $randomu = LJ::load_user( $username );
                if ( LJ::isu( $randomu ) ) {
                    $ret .= "<tr><td>$ML{'.giftfor.username'}</td><td><strong>" . $randomu->ljuser_display . "</strong></td></tr>";
                    $ret .= LJ::html_hidden( username => $randomu->user );
                } else {
                    return BML::redirect( "$LJ::SITEROOT/shop" );
                }
            } else {
                $ret .= "<tr><td>$ML{'.giftfor.username'}</td><td><strong>$ML{'.giftfor.username.random'}</strong></td></tr>";
                $ret .= LJ::html_hidden( username => '(random)' );
            }
        } else { # $for eq 'new'
            $ret .= "<tr><td>$ML{'.giftfor.email'}</td><td>" . LJ::html_text( { name => 'email', value => LJ::ehtml( $POST{email} ) } );
            $ret .= "<br />$email_checkbox" if $email_checkbox;
            $ret .= "</td></tr>";
        }

        $ret .= "<tr><td>$ML{'.giftfor.deliverydate'}</td>";
        my $deliverydate = $POST{deliverydate_mm} && $POST{deliverydate_dd} && $POST{deliverydate_yyyy}
                    ? sprintf( '%04d-%02d-%02d', $POST{deliverydate_yyyy}, $POST{deliverydate_mm}, $POST{deliverydate_dd} )
                    : DateTime->today->date;
        $ret .= "<td>" . LJ::html_datetime( {
            name => 'deliverydate',
            default => $deliverydate,
            notime => 1,
        } ) . "</td></tr>";
        $ret .= "<tr><td>$ML{'.giftfor.anonymous'}</td>";
        $ret .= "<td>" . LJ::html_check( {
            name => 'anonymous',
            value => 1,
            disabled => $remote ? 0 : 1,
            selected => $POST{anonymous} || ! $remote,
        } ) . "</td></tr>";

        if ( DW::Shop::Item::Account->can_have_reason ) {
            $ret .= "<tr><td>$ML{'.giftfor.reason'}</td><td>";
            $ret .= LJ::html_textarea( {
                                        name => 'reason',
                                        rows => 6,
                                        cols => 60,
                                        wrap => 'soft',
                                        value => $POST{reason},
                                       } );
            $ret .= "</td></tr>";
        }

        $ret .= "</table>";
    }

    $ret .= LJ::html_hidden( for => $GET{for} );
    $ret .= LJ::html_hidden( alreadyposted => 1 ) if LJ::did_post();
    $ret .= "<p>" . LJ::html_submit( $ML{'.btn.addtocart'} ) . "</p>";
    $ret .= "</form>";

    $ret .= "<p><a href='$LJ::SITEROOT/shop'>&lt;&lt; " . BML::ml( '.backlink', { sitename => $LJ::SITENAMESHORT } ) . "</a></p>";

    return $ret;
}
_code?>
<=body
title=><?_code return $title; _code?>
page?>
