<?_c
#
# shop/cart.bml
#
# Allows for viewing and manipulating the shopping cart.
#
# Authors:
#      Mark Smith <mark@dreamwidth.org>
#      Janine Smith <janine@netrophic.com>
#
# Copyright (c) 2009 by Dreamwidth Studios, LLC.
#
# This program is free software; you may redistribute it and/or modify it under
# the same terms as Perl itself. For a copy of the license, please reference
# 'perldoc perlartistic' or 'perldoc perlgpl'.
#
_c?><?page
body<=
<?_code
{
    use strict;
    use vars qw/ %GET %POST $title /;

    return BML::redirect( "$LJ::SITEROOT/" )
        unless LJ::is_enabled( 'payments' );

    # this page uses new style JS
    LJ::need_res( 'stc/shop.css' );
    LJ::set_active_resource_group( 'jquery' );

    $title = $ML{'.title'};

    my $err = DW::Shop->remote_sysban_check;
    return $err if $err;

    my $ret;
    $ret .= "<p><a href='$LJ::SITEROOT/shop'>&lt;&lt; $ML{'.backlink'}</a> &bull; <a href='$LJ::SITEROOT/shop/gifts'>$ML{'.gift'}</a></p>";

    $ret .= qq{
        <div class='warning-box message-box'>
            <div class='title'>$ML{'.payment.failed.title'}</div>
            <p>$ML{'.payment.failed.duplicate'}</p>
        </div>\n}
        if $GET{duplicate};

    $ret .= qq{
        <div class='warning-box message-box'>
            <div class='title'>$ML{'.payment.failed.title'}</div>
            <p>$ML{'.payment.failed.other'}</p>
        </div>\n}
        if $GET{failed};

    if ( LJ::did_post() ) {
        my %from_post = LJ::Widget->handle_post( \%POST, ( 'ShopCart' ) );
        $ret .= "<div class='shop-error error-box'>$from_post{error}</div>"
            if $from_post{error};
    }


    $ret .= LJ::Widget::ShopCart->render;

    $ret .= "<p><a href='$LJ::SITEROOT/shop'>&lt;&lt; $ML{'.backlink'}</a> &bull; <a href='$LJ::SITEROOT/shop/gifts'>$ML{'.gift'}</a></p>";

    return $ret;
}
_code?>
<=body
title=><?_code return $title; _code?>
page?>
