<?_c
# This code was forked from the LiveJournal project owned and operated
# by Live Journal, Inc. The code has been modified and expanded by
# Dreamwidth Studios, LLC. These files were originally licensed under
# the terms of the license supplied by Live Journal, Inc, which can
# currently be found at:
#
# http://code.livejournal.org/trac/livejournal/browser/trunk/LICENSE-LiveJournal.txt
#
# In accordance with the original license, this code and all its
# modifications are provided under the GNU General Public License.
# A copy of that license can be found in the LICENSE file included as
# part of this distribution.
_c?>
<html>
<head><title>Comment view</title>
<body>
<?_code
{
    use strict;
    use vars qw(%GET %POST);
    my $ret;
    my $remote = LJ::get_remote();
    my @displayprivs = ( "siteadmin:commentview", "siteadmin:*" );
    my $numprivs = @displayprivs;

    return "<?needlogin?>" unless $remote;
    return BML::ml( "admin.noprivserror", { numprivs => $numprivs, needprivs => "<b>" . join(", ", @displayprivs) . "</b>"} )
        unless $remote->has_priv( "siteadmin", "commentview" );

    my $user = $GET{'user'};
    my $u;
    if ($user =~ /^\#(\d+)/) {
        $u = LJ::load_userid($1);
    } elsif ($user) {
        $u = LJ::load_user($user);
    }
    unless ($u) {
        return "<form method='GET'>Username or (#userid) to view comments of: ".
            "<input name='user' maxlength='25' size='25' /><input type='submit' value='Load' /></form>";
    }
    $user = $u->{'user'};
    $ret .= "<a href='recent_comments'>&lt;&lt;</a> <b>Recent comments of " . LJ::ljuser($u) . "</b> (\#$u->{userid})<br />\n";

    my $dbcr = LJ::get_cluster_reader($u);
    return "Error: can't get DB for user" unless $dbcr;

    my $now = time();

    my $sth = $dbcr->prepare("SELECT posttime, journalid, nodetype, nodeid, jtalkid, publicitem ".
                             "FROM talkleft ".
                             "WHERE userid=?  ORDER BY posttime DESC LIMIT 250");
    $sth->execute($u->{'userid'});
    my %jcount;  # jid -> ct
    while (my $r = $sth->fetchrow_hashref) {
        $jcount{$r->{'journalid'}}++;
        next unless $r->{'nodetype'} eq "L";  # log2 comment

        my $ju = LJ::load_userid($r->{'journalid'});
        my $lrow = LJ::get_log2_row($ju, $r->{'nodeid'});
        my $hr_ago = sprintf("%.1f", ($now - $r->{'posttime'}) / 3600);

        if ($lrow) {
            my $talkid = ($r->{'jtalkid'} << 8) + $lrow->{'anum'};
            my $talkurl = $ju->journal_base . "/$lrow->{ditemid}.html";
            my $url = LJ::Talk::talkargs($talkurl, "thread=$talkid") . LJ::Talk::comment_anchor( $talkid );
            $ret .= "$hr_ago hr ago in " . LJ::ljuser($ju) . ": <a href='$url'>$url</a><br />\n";
        } else {
            $ret .= "$hr_ago hr ago in " . LJ::ljuser($ju) . ": link unavailable<br />";
        }
    }

    return $ret;

}
_code?>
</body>
</html>
