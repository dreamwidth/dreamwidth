<?_c
#
# admin/sysban.bml
#
# Frontend for managing/setting/clearing sysbans
#
# Authors:
#      Juliet Kemp <juliet.kemp@gmail.com>
#
# Copyright (c) 2009 by Dreamwidth Studios, LLC.
#
# This program is free software; you may redistribute it and/or modify it under
# the same terms as Perl itself.  For a copy of the license, please reference
# 'perldoc perlartistic' or 'perldoc perlgpl'.
_c?>
<?page
title=>Sysban Management
head<=
<style>
<!--
td {
    border: solid 1px rgb(230,230,230);
    padding: 2px;
    margin: 0px;
    vertical-align: top;
}
th {
    border: solid 1px rgb(180,180,180);
    padding: 2px;
    margin: 0px;
    text-weight: bold;
}
-->
</style>
<=head
body<=
<?_code
{
    use strict;
    use vars qw(%GET %POST);

    my $main_return = '<p><form method="post" action="sysban">
        <input type="submit" value="Return to Sysban page"></form></p>';
    my $err = sub {
        return "<?h1 Error h1?><?p $_[0] p?><?p $main_return p?>";
     };
    my $priv = 'sysban';
    my @all_sb_args = LJ::list_valid_args( 'sysban' );

    my $remote = LJ::get_remote();
    return "<?needlogin?>" unless $remote;

    my @displayprivs = ( "sysban" );
    my $numprivs = @displayprivs;

    return BML::ml("admin.noprivserror", { numprivs => $numprivs, needprivs => "<b>" . join(", ", @displayprivs) . "</b>"} )
        unless $remote && $remote->has_priv( $priv );

    my @sysban_privs;
    my %priv_args = $remote->priv_args( $priv );
    foreach my $arg ( keys %priv_args ) {
        if ( $arg eq '*' ) {
            push @sysban_privs, @all_sb_args;
        } else {
            push @sysban_privs, $arg;
        }
    }

    my $action;
    if    ( $POST{'query'} )  { $action = 'query'; }
    elsif ( $POST{queryone} ) { $action = 'queryone'; }
    elsif ( $POST{'addnew'} ) { $action = 'addnew'; }
    elsif ( $POST{'add'} )    { $action = 'add'; }
    elsif ( $POST{'modify'} ) { $action = 'modify'; }
    else                      { $action = undef; }

    my $bantype = $POST{'bantype'};
    my $skip = $POST{skip} ? $POST{skip} + 0 : 0;

    my $ret = "<form method='post' action='sysban'>";
    $ret   .= LJ::form_auth();
    $ret   .= "<select name='bantype'>";
    foreach my $type ( sort @sysban_privs ) {
        $ret .=  "<option value='$type'>$type</option>\n";
    }
    $ret .= <<FORM;
</select>
<input type='submit' name='addnew' value='Add New'>
<input type='submit' name='query' value='Query'>
<br /><br />

<label for="queryvalue">Query all sysbans for this value:</label><br />
<input type='text' id="queryvalue" name='queryvalue' /> <input type='submit' name='queryone' value='Query This Value' />
</form>
FORM

    return $ret unless $action;

    if ( $action eq "query" ) {

        return $err->("Requires post") unless LJ::did_post();
        return $err->("Invalid form") unless LJ::check_form_auth();
        
        my $existing_bans = {};
        my $limit = 20;

        LJ::Sysban::populate_full( $existing_bans, $bantype, $limit, $skip );

        $ret = <<QUERYFORM;
<table>
<thead><tr><th>Value</th><th>Expiration</th><th>Change expiry</th><th>Note</th><th>Action</th></tr></thead>
QUERYFORM

        foreach my $value ( keys %$existing_bans ) {

            my $expire = $existing_bans->{ $value }->{expire};
            my $note   = $existing_bans->{ $value }->{note};
            my $enote  = LJ::ehtml($note);
            my $banid  = $existing_bans->{ $value }->{banid};
            $note =~ s/^'(.*)'$/\1/;

            $ret .= "<tr>\n <td>$value</td><td>" . localtime($expire) . "</td>";
            $ret .= "<form method='post' action='sysban'>" . 
                    LJ::form_auth();
            $ret .= <<QUERYFORM;
<td>
<select name='bandays'>
<option selected value='E'>no change</option>
<option value='X'>expire now</option>
<option value='1'>add 24 hrs</option>
<option value='7'>add 7 days</option>
<option value='30'>add 1 month</option>
<option value='0'>forever</option>
</select>
</td>
<td>
<textarea name='note' rows='3' cols='60'>$enote</textarea>
</td>
<td><input type='submit' name='modify' value='modify'>
</td>
<input type='hidden' name='expire' value=$expire>
<input type='hidden' name='banid' value=$banid>
<input type='hidden' name='bantype' value=$bantype>
<input type='hidden' name='value' value=$value>
</form>
</tr>

QUERYFORM
        }
        $ret .= "</table>";

        if ( keys %$existing_bans >= $limit ) {
            $ret .= "\n<form method='post' action='sysban'>";
            $ret .= LJ::form_auth();
            $ret .= LJ::html_hidden( query => 'Query' );
            $ret .= LJ::html_hidden( bantype => $bantype );
            $ret .= LJ::html_hidden( skip => $skip + $limit );
            $ret .= LJ::html_submit( submit => "<< Previous $limit" );
            $ret .= "</form>";
        }

        if ( $skip ) {
            $ret .= "\n<form method='post' action='sysban'>";
            $ret .= LJ::form_auth();
            $ret .= LJ::html_hidden( query => 'Query' );
            $ret .= LJ::html_hidden( bantype => $bantype );
            $ret .= LJ::html_hidden( skip => $skip - $limit );
            $ret .= LJ::html_submit( submit => "Next $limit >>" );
            $ret .= "</form>";
        }

    }

    elsif ( $action eq "queryone" ) {
        return $err->("Requires post") unless LJ::did_post();
        return $err->("Invalid form") unless LJ::check_form_auth();

        my $banquery = $POST{queryvalue};
        my $sysbans = LJ::Sysban::populate_full_by_value( $banquery, @sysban_privs ) || {};
        if ( %$sysbans ) {
            $ret .= "Sysbans for " . LJ::ehtml( $banquery );
            $ret .= "<table><thead><tr><th>Type</th><th>Expiration</th><th>Note</th></tr></thead>";
            foreach my $what ( sort keys %$sysbans  ) {
                my $details = $sysbans->{$what};
                $ret .= "<tr>";
                $ret .= "<td>$what</td>";
                $ret .= "<td>" . localtime( $details->{expire} ) . "</td> ";
                $ret .= "<td>" . LJ::ehtml( $details->{note} ) . "</td>";
                $ret .= "</tr>";
            }
            $ret .= "</table>";
        } else {
            $ret .= "No sysbans matching " . LJ::ehtml( $banquery );
        }
    }

    # this action comes from the query section
    elsif ( $action eq "modify" ) {

        return $err->("Requires post") unless LJ::did_post();
        return $err->("Invalid form") unless LJ::check_form_auth();

        my $banid     = $POST{banid};
        my $bandays   = $POST{bandays};
        my $expire    = $POST{expire};
        my $note      = $POST{note};
        my $bantype   = $POST{bantype};
        my $value     = $POST{value};

        my $modify = LJ::Sysban::modify(
                         banid => $banid, expire => $expire,
                         bandays => $bandays, note => $note,
                         what => $bantype, value => $value
                     );

        return $err->("Ban modify error:" . $modify->{message}) 
            if ( ref $modify eq 'ERROR' ); 

        my $auth = LJ::form_auth();
        $ret = <<RETURN;
Ban modified.
<p><form method="post" action="sysban">
$auth
<input type='hidden' name='bantype' value=$bantype>
<input type='submit' name='query' value='Return to updated query listing'>
</form></p>
RETURN

    }

    
    elsif ($action eq "addnew") {

        return $err->("Requires post") unless LJ::did_post();
        return $err->("Invalid form") unless LJ::check_form_auth();

        $ret = "<form method='post' action='sysban'> " . LJ::form_auth() . 
                "<select name='bantype' onchange=\"\$('spelling').style.display = ( this.value.endsWith('email') ? 'block' : 'none' )\">";
        foreach my $type ( sort @sysban_privs ) {
            if ( $type eq $bantype ) {
                $ret .=  "<option selected value='$type'>$type</option>\n";
            } else {
                $ret .=  "<option value='$type'>$type</option>\n";
            }
        }
        my $spellstyle = ( $bantype =~ /email$/ ) ? "" : "display: none";
        $ret .= <<FORM;
</select>
Value: <input type='text' name='value'>
Duration: <select name='bandays'>
<option value='1'>24 hrs</option>
<option value='7'>7 days</option>
<option value='30'>1 month</option>
<option value='0'>forever</option>
</select>
<div id="spelling" style="$spellstyle">
<input type="checkbox" name="force_spelling" id="force_spelling">&nbsp;<label for="force_spelling">Override email spell-check</label>
</div>
Note (required):<br />
<textarea name='note' rows='3' cols='80'></textarea>
<br />
<input type='submit' name='add' value='Add'>
</form>
FORM
    }

    elsif ( $action eq "add" ) {

        return $err->("Requires post") unless LJ::did_post();
        return $err->("Invalid form") unless LJ::check_form_auth();

        # trim whitespace from both ends of the input before storing it in $value
        my $value   = LJ::trim( $POST{value} );
        my $bandays = $POST{bandays};
        my $note    = $POST{note};

        return $err->("No note field!") unless $note; 
        return $err->("You do not have the correct privileges") unless 
            $remote && $remote->has_priv( $priv, $bantype );

        my $notvalid = LJ::Sysban::validate( $bantype, $value, undef, \%POST );
        return $err->("Ban not valid: $notvalid") if $notvalid;

        my $create = LJ::Sysban::create(
                         what => $bantype, value => $value,
                         bandays => $bandays, note => $note
                     );
        return $err->("Ban creation error:" . $create->{message}) 
            if ( ref $create eq 'ERROR' ); 

        $ret = "Ban successfully added.";

    }

    else {
        return $err->("Form is returning an impossible action $action:
            something is badly wrong!");
    }

    $ret .= $main_return;

    return $ret;
    
}
_code?>
<=body
page?>
