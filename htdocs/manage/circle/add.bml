<?_c
# This code was forked from the LiveJournal project owned and operated
# by Live Journal, Inc. The code has been modified and expanded by
# Dreamwidth Studios, LLC. These files were originally licensed under
# the terms of the license supplied by Live Journal, Inc, which can
# currently be found at:
#
# http://code.livejournal.org/trac/livejournal/browser/trunk/LICENSE-LiveJournal.txt
#
# In accordance with the original license, this code and all its
# modifications are provided under the GNU General Public License.
# A copy of that license can be found in the LICENSE file included as
# part of this distribution.
_c?>
<?_code
{
    use strict;

    use vars qw($body $title $windowtitle %GET %POST);

    my $head     = \$_[1]->{'head'};

    my $action = $GET{action};
    $action = '' unless $action eq 'access' || $action eq 'subscribe' || $action eq 'remove';

    my $remote = LJ::get_remote();
    my $user = $POST{'user'} || $GET{'user'};
    my $u = LJ::load_user($user);
    my $userid = $u->{userid};

    $body = "";

    LJ::need_res( { group => "jquery" }, qw( js/colorpicker.js js/jquery.circle-add.js ) );
    LJ::set_active_resource_group( "jquery" );

    LJ::set_active_crumb('addfriend');

    unless ($remote)
    {
        $title = $ML{'.error1.title'};
        $body = "<?needlogin?>";
        return;
    }

    unless ($user && $userid)
    {
        $title = $ML{'Error'};
        $body = BML::ml('.error2.text2', {'aopts' => "href='$LJ::SITEROOT/manage/circle/edit'"});
        return;
    }

    my $username = $u->name_html;

    if ($POST{'mode'} eq "add")
    {
        unless (LJ::did_post()) {
            $title = $ML{'Error'};
            $body = "<?h1 $ML{'Error'} h1?><?p <?requirepost?> p?>";
            return;
        }

        unless (LJ::check_form_auth()) {
            $title = $ML{'Error'};
            $body = "<?h1 $ML{'Error'} h1?><?p $ML{'error.invalidform'} p?>";
            return;
        }

        unless ( $remote->userid == $POST{remid} ) {
            $title = $ML{'Error'};
            $body = "<?h1 $ML{'Error'} h1?><?p $ML{'.error.sessionchanged'} p?>";
            return;
        }

        my $gmask = 1;
        foreach my $bit (1..60) {
            next unless $POST{"bit_$bit"};
            $gmask |= (1 << $bit);
        }

        my $trusted_nonotify = $remote->trusts( $u ) ? 1 : 0;
        my $watched_nonotify = $remote->watches( $u ) ? 1 : 0;

        if ( $POST{add_trust} ) {
            $remote->add_edge( $u, trust => {
                mask => $gmask,
                nonotify => $trusted_nonotify ? 1 : 0,
            });
        } else {
            $remote->remove_edge( $u, trust => {
                nonotify => $trusted_nonotify ? 0 : 1,
            } );
        }

        if ( $POST{add_watch} ) {
            my $fg = $POST{color_switch} ? $POST{editfriend_add_1_fg} : "#000000";
            $fg = LJ::color_todb( $fg );
            my $bg = $POST{color_switch} ? $POST{editfriend_add_1_bg} : "#FFFFFF";
            $bg = LJ::color_todb( $bg );
            $remote->add_edge( $u, watch => {
                fgcolor => $fg,
                bgcolor => $bg,
                nonotify => $watched_nonotify ? 1 : 0,
            } );
            # add to content filters
            my @content_filters = $remote->content_filters;
            my $filter_id;
            foreach my $filter ( @content_filters ) {
                $filter_id = $filter->id;
                # add to filter if box was checked and user is not already in filter
                $filter->add_row( userid => $u->userid ) if $POST{"content_$filter_id"} && !$filter->contains_userid( $u->userid );
                # remove from filter if box was not checked and user is in filter
                $filter->delete_row( $u->userid ) if !$POST{"content_$filter_id"} && $filter->contains_userid( $u->userid );
            }
        } else {
            $remote->remove_edge( $u, watch => {
                nonotify => $watched_nonotify ? 0 : 1,
            } );
        }

        $body = "";

        $title = $ML{'.add.title'};
        $body .= "<?h1 $ML{'.add.header'} h1?>";
        my $posting_guidelines_entry_url;
        my $post_url;
        if ( $u->is_community ) {
            if ( $u->posting_guidelines_location eq "E" ) {
                $posting_guidelines_entry_url = $u->posting_guidelines_url;
            }
            if ( $u->posting_guidelines_location eq "P" ) {
                $posting_guidelines_entry_url = $u->profile_url;
            }
            my $show_join_post_link = $u->hide_join_post_link ? 0 : 1;
            $post_url = $LJ::SITEROOT . "/update?usejournal=" . $u->user
                if $show_join_post_link && $remote->can_post_to( $u );
        }

        $body .= "<?p " . BML::ml('.add.text2', { 'ljuser' => LJ::ljuser($u) }) . " p?>";
        $body .= "<ul>";
        $body .= "<li><a href='$LJ::SITEROOT/inbox/compose?user=$user'>$ML{'.add.next.message'}</a></li>"
            if $u->is_personal && $u->can_receive_message( $remote );
        $body .= "<li><a href='$posting_guidelines_entry_url'>$ML{'.add.next.postingguidelines'}</a></li>"
            if $posting_guidelines_entry_url;
        $body .= "<li><a href='$post_url'>$ML{'.add.next.posttocommunity'}</a></li>"
            if $post_url;
        $body .= "<li><a href='" . $remote->journal_base . "/read'>$ML{'.add.next.friends'}</a></li>";
        $body .= "<li><a href='$LJ::SITEROOT/manage/circle/edit'>$ML{'.add.next.modify'}</a></ul>";
        return;
    }

    $body .= "<form method='post' name='editFriends' action='add'>\n";
    $body .= LJ::form_auth();
    $body .= LJ::html_hidden(mode  => 'add',
                             user  => $user,
                             remid => $remote->{userid});


    # check to see if user is already a friend.
    my $trusted = $remote->trusts( $u );
    my $watched = $remote->watches( $u );
    my $watch_list = $remote->watch_list;
    my $fgvalue = $watched ? $watch_list->{$userid}->{fgcolor} : "#000000";
    my $bgvalue = $watched ? $watch_list->{$userid}->{bgcolor} : "#FFFFFF";
    my $custom_colors = ( $fgvalue ne "#000000" || lc( $bgvalue ) ne "#ffffff" ) || 0;

    my $add = ( $watched || $trusted ) ? "" : ".add";

    # return an error if user being added isn't visible
    my $icon = $u->large_journal_icon;
    if ( $u->is_visible ) {
        # was this a syndicated add?
        if ( $u->is_syndicated ) {
            $windowtitle = BML::ml( '.confirm.title.syn2'.$add, { user => $user } );
            $title = BML::ml( '.confirm.title.syn2'.$add, { user=> LJ::ljuser( $u, { head_size => "24x24" } ) } );
            $body .= "<?p $ML{'.confirm.text1.feed'} p?>";

        # Is this account redirected?
        } elsif ( $u->is_redirect && $u->prop('renamedto') ) {
            return BML::redirect("$LJ::SITEROOT/manage/circle/add?user=" . $u->prop('renamedto'));

        } elsif ( $u->is_community ) {
            $windowtitle = BML::ml( '.confirm.title.community2'.$add, { user => $user } );
            $title = BML::ml('.confirm.title.community2'.$add, { user=> LJ::ljuser( $u, { head_size => "24x24" } ) } );
            unless ( $remote->member_of( $u ) ) {
                if ( $remote->is_person ) {
                    $body .= "<?p " . BML::ml( '.confirm.text1.community2', {'aopts' => "href='$LJ::SITEROOT/community/join?comm=$user'"} ) . " p?>";
                } else {
                    $body .= "<?p $ML{'.confirm.text1.community2.openid'} p?>";
                }
            }
        } else {
            if ( $u->is_identity ) {
               $windowtitle = BML::ml( '.confirm.title.person2'.$add, { user => $u->display_name } );
               $title = BML::ml('.confirm.title.person2'.$add, { user => LJ::ljuser( $u, { head_size => "24x24" } ) } );
            } else {
               $windowtitle = BML::ml( '.confirm.title.person2'.$add, { user => $u->display_name } );
               $title = BML::ml( '.confirm.title.person2'.$add, { user => LJ::ljuser( $u, { head_size => "24x24" } ) } );
            }
            $body .= "<?p $ML{'.confirm.text1.person'} p?>"
                if $remote->can_trust( $u ) && $remote->can_watch( $u );
        }
    } elsif ( $trusted || $watched ) {
        $windowtitle = BML::ml( '.confirm.title.person', { user => $u->display_name } );
        $title = BML::ml( '.confirm.title.person', { icon => $icon, user => $u->display_name } );
        $body .= "<?p $ML{'.confirm.text1.notvisible'} p?>";
    } else {
        $title = $ML{'Error'};
        $body .= "<?p " . BML::ml('.error.notvisible', {'user' => LJ::ljuser($user)}) . " p?>";
        return;
    }

   # users that aren't visible can only be removed, not modified
   if ($u->is_visible) {

    my ( $w_err, $t_err );

    if ( $trusted || $remote->can_trust( $u, errref => \$t_err ) ) {
        $body .= LJ::html_check({
            name => "add_trust",
            id => "add_trust",
            selected => ( $trusted && $action ne 'remove' ) || $action eq 'access' ? 1 : 0,
            label => $ML{'.add.trust'},
        }) . "<br />";
    }

    if ( $watched || $remote->can_watch( $u, errref => \$w_err ) ) {
        $body .= LJ::html_check({
            name => "add_watch",
            id => "add_watch",
            selected => ( $watched && $action ne 'remove' ) || $action eq 'subscribe' ? 1 : 0,
            label => $ML{'.add.watch'},
        });
    }

    if ( $w_err && $t_err ) {
        # if we get here, the user isn't trusted or watched,
        # and can_trust and can_watch both failed, which means
        # no checkboxes can be displayed.

        $title = $ML{'Error'};
        $body .= "<?p $w_err p?>";
        return;
    }

    my @trust_groups = $remote->trust_groups;
    my @content_filters = $remote->content_filters;

    # let them pick access and content filters to put the user in
    my $err;

    if ( $remote->can_trust( $u ) && @trust_groups || $remote->can_watch( $u ) && @content_filters ) {
        # extra add and cancel buttons
        $body .= "<br /><br />";
        if ($u->is_visible) {
            my $btn = ( $watched || $trusted ) ? $ML{'.btn.modify'} :  BML::ml( '.btn.add', { user => $u->display_name } );
            $body .= "<input type='submit' value=\"$btn\"> ";
        } else {
            $body .= "<input type='submit' name='action:delete' value=\"$ML{'.btn.remove'}\"> \n";
        }

        my $cancel_btn = LJ::ejs($ML{'.btn.cancel'});

        $body .= "<script type='text/javascript' language='Javascript'> \n <!-- \n
       document.write(\"<input type='button' value='$cancel_btn' onclick='history.go(-1); return false;'>\");
        \n // -->\n ";
        $body .= '</script>';
    }

    # trust group buttons
    if ( $remote->can_trust( $u ) && @trust_groups ) {
        $body .= "<div class='add_trust' style='float: left; width: 45%; padding: 1em;'>";
        $body .= "<?p &nbsp;<br />";
        $body .= "$ML{'.groups.text1'} p?>\n";
        foreach my $group ( @trust_groups ) {
            my $g = $group->{groupnum};
            my $ck = ( $remote->trustmask( $u ) & (1 << $g) );
            $body .= LJ::html_check( { name     => "bit_$g",
                                       id       => "fg:bit_$g",
                                       selected => $ck,
                                       label    => $group->{groupname} } );
            $body .= "<br />\n";
        }
        $body .= "</div>";
    }

    # content filter buttons
    if ( $remote->can_watch( $u ) && @content_filters ) {
        $body .= "<div class='add_watch' style='float: left; width: 45%; padding: 1em;'><?p &nbsp;<br />";
        $body .= $u->is_syndicated ? "$ML{'.groups.reading.feed'} p?>\n" : "$ML{'.groups.reading'} p?>\n";
        my @sorted_content_filters = sort { $a->{sortorder} <=> $b->{sortorder} } @content_filters;
        foreach my $filter ( @sorted_content_filters ) {
            my $ck = ( $filter->contains_userid( $u->userid ) )
                || ( $action eq "subscribe" && ! $watched && $filter->is_default() );
            my $fid = $filter->id;
            $body .= LJ::html_check( { name     => "content_$fid",
                                       id       => "content_$fid",
                                       selected => $ck,
                                       label    => $filter->{name} } );
            $body .= "<br />\n";
        }
        $body .= "</div>";
    }

    $body .= "<div style='clear: left;'></div>";

    my $color_switch_checked = $custom_colors ?  "checked=\"checked\"" : "";

    $body .= "<div class='add_watch'>";
    ## let them pick the colors
    my $color_text = "<?p <table summary=\\'\\'><tr><td valign=\"top\"><i>$ML{'.optional'}:</i> ".
             "<input type=\"checkbox\" id=\"color_switch\" name=\"color_switch\" onClick=\"color_display(this);\" $color_switch_checked> </td><td><label for=\"color_switch\">" .
             BML::ml( '.colors.text', { user => $username } ) .
             "</label><br /><span style=\"font-size: 7pt;\">($ML{'.colors.disclaimer'})</span></td></tr></table> p?>";
    $body .= "<script>\n";
    $body .= "function color_display(check) {\n";
    $body .= "  if (check.checked) {\n";
    $body .= "    \$(\"#color_opt\").slideDown();\n";
    $body .= "  } else {\n";
    $body .= "    \$(\"#color_opt\").slideUp();\n";
    $body .= "  }\n";
    $body .= "}\n";
    $body .= "var text = '$color_text';\n";
    $body .= "document.write(text);\n";
    $body .= "</script>\n";

    $body .= "<noscript>\n";
    $body .= "<?p <table summary=''><tr><td valign='top'><i>$ML{'.optional'}:</i> </td><td>" .
             BML::ml( '.colors.text', { user => $username } ) .
             "<br /><span style='font-size: 7pt;'>($ML{'.colors.disclaimer'})</span></td></tr></table> p?>";
    $body .= "</noscript>\n";


    my $ret = "";
    $ret .= "  <div id='color_opt'>\n";
    $ret .= "<script>\n";
    $ret .= "  \$(\"#color_opt\").hide()\n";
    $ret .= "  color_display(\$(\"#color_switch\"));\n";
    $ret .= "</script>\n";

    $ret .= "<?p <script type=\"text/javascript\" language=\"JavaScript\">\n<!--\ndocument.write(\"<span style='font-size: 7pt;'>";
    $ret .= "$ML{'.colors.help.text1'}</span>\")\n// -->\n</script> p?>";
    $ret .= "<?p <noscript>\n<p><span style='font-size: 7pt;'>$ML{'.colors.help.text2'}</span></p>\n</noscript> p?>";

    # foreground
    $ret .= "<table summary='' width=\"650\" cellpadding='4'><tr><td><b>$ML{'.colors.fg'}</b></td><td>";

    # custom color selection

    # with javascript
    $ret .= qq~
   <script type='text/javascript' language='JavaScript'>
   <!--
   document.write("<a href='javascript:void(0);' style='text-decoration: none;' onclick=\\"spawnPicker(findel('editfriend_add_1_fg'),findel('editfriend_add_1_fg_value_disp'),'Overall: fgcolor',{obj:'preview',attrib:'color'});return false;\\"><span style='border: 1px solid #000000; padding-left: 2em; background-color: $fgvalue\;' id='editfriend_add_1_fg_value_disp'>&nbsp;</span></a>");
   // -->
   </script>
   ~;

    # without javascript
    $ret .= qq~
   <noscript>
   &nbsp;
   </noscript>
   ~;


    # hex value input
    $ret .= "</td>";
    $ret .= "<td><input type=\"text\" maxlength=\"7\" value=\"$fgvalue\" ";
    $ret .= "name=\"editfriend_add_1_fg\" size=\"8\" ";
    $ret .= "onchange=\"setBGColorWithId(findel('editfriend_add_1_fg_value_disp'),";
    $ret .= "'editfriend_add_1_fg');";
    $ret .= "findel('preview')";
    $ret .= ".style.color = findel('editfriend_add_1_fg').value;\" onfocus=\"\" ";
    $ret .= "id=\"editfriend_add_1_fg\" /></td>";

    my @color = ();
    LJ::load_codes({ "color" => \@color });

    ### color swatch
    my $col = 0;
    $ret .= "<td><table summary='' border='0' cellspacing='0' cellpadding='0'>";

    # with javascript
    foreach (@color) {
        if ($col==0) { $ret .= "<tr>\n"; }
        $col++;
        my $colspan = '';
        my $wh = '16';
        if ($_ eq $color[$#color]) {
            $colspan = "colspan='2'";
            $wh = '32';
        }
        my $ecolor = LJ::ehtml($_->{'item'});
        my $jsattrs = qq~href='javascript:void(0);' style='text-decoration: none; background-color: $_->{code};' ~
            . qq~onclick=\\"setBGColor(findel('editfriend_add_1_fg_value_disp'),'$_->{code}');~
            . qq~document.editFriends.editfriend_add_1_fg.value = '$_->{code}';~
            . qq~document.getElementById('preview').style.color = '$_->{code}';\\"~;

        $ret .= qq~
   <script type='text/javascript' language='JavaScript'>
   <!--
   document.write("<td $colspan><a $jsattrs><img src='/img/dot.gif' width='$wh' height='16' title='$ecolor - $_->{code}' alt='$ecolor - $_->{code}' border='0'></a></td>");
   // -->
   </script>
   ~;
        if ( $col == 23 ) {
            $ret .= "</tr>\n";
            $col = 0;
        }
    }
    if ( $col ) {
        $ret .= "</tr>\n";
        $col = 0;
    }
    my $col2 = 0;

    # without javascript
    my $ret2 = "<noscript>\n";
    foreach (@color) {
        if ($col2==0) { $ret2 .= "<tr>\n"; }
        $col2++;
        my $colspan = '';
        my $wh = '16';
        if ($_ eq $color[$#color]) {
            $colspan = "colspan='2'";
            $wh = '32';
        }
        my $ecolor = LJ::ehtml($_->{'item'});
        $ret2 .= qq~
   <td $colspan bgcolor='$_->{code}'><img src='/img/dot.gif' width='$wh' height='16' title='$ecolor - $_->{code}' alt='$ecolor - $_->{code}'
   border='0'></td>
   ~;
        if ( $col2 == 23 ) {
            $ret2 .= "</tr>\n";
            $col2 = 0;
        }
    }
    if ( $col2 ) {
        $ret2 .= "</tr>\n";
        $col2 = 0;
    }

    $ret2 .= "</noscript>";

    $ret .= $ret2;
    $ret .= "</table></td></tr>\n";


    # background
    $ret .= "<tr><td><b>$ML{'.colors.bg'}</b></td><td>";

    # custom color selection

    # with javascript
    $ret .= qq~
   <script type='text/javascript' language='JavaScript'>
   <!--
   document.write("<a href='javascript:void(0);' style='text-decoration: none;' onclick=\\"spawnPicker(findel('editfriend_add_1_bg'),findel('editfriend_add_1_bg_value_disp'),'Overall: bgcolor',{obj:'preview',attrib:'backgroundColor'});return false;\\"><span style='border: 1px solid #000000; padding-left: 2em; background-color: $bgvalue\;' id='editfriend_add_1_bg_value_disp'>&nbsp;</span></a>");
   // -->
   </script>
   ~;

    # without javascript
    $ret .= qq~
   <noscript>
   &nbsp;
   </noscript>
   ~;

    # hex value input
    $ret .= "</td>";
    $ret .= "<td><input type=\"text\" maxlength=\"7\" value=\"$bgvalue\" ";
    $ret .= "name=\"editfriend_add_1_bg\" size=\"8\" ";
    $ret .= "onchange=\"setBGColorWithId(findel('editfriend_add_1_bg_value_disp'),";
    $ret .= "'editfriend_add_1_bg'); setBGColorWithId(findel('";
    $ret .= "preview'),'editfriend_add_1_bg');\" onfocus=\"\" ";
    $ret .= "id=\"editfriend_add_1_bg\" /></td>";

    ### color swatch
    $col = 0;
    $ret .= "<td><table summary='' border='0' cellspacing='0' cellpadding='0'>";
    # with javascript
    foreach (@color) {
        if ($col==0) { $ret .= "<tr>\n"; }
        $col++;
        my $colspan = '';
        my $wh = '16';
        if ($_ eq $color[$#color]) {
            $colspan = "colspan='2'";
            $wh = '32';
        }
        my $ecolor = LJ::ehtml($_->{'item'});
        my $jsattrs = qq~href='javascript:void(0);' style='text-decoration: none; background-color: $_->{code};' ~
            . qq~onclick=\\"setBGColor(findel('editfriend_add_1_bg_value_disp'),'$_->{code}');~
            . qq~document.editFriends.editfriend_add_1_bg.value = '$_->{code}';~
            . qq~setBGColor(findel('preview'),'$_->{code}');\\"~;

        $ret .= qq~
   <script type='text/javascript' language='JavaScript'>
   <!--
   document.write("<td $colspan><a $jsattrs><img src='/img/dot.gif' width='$wh' height='16' title='$ecolor - $_->{code}' alt='$ecolor - $_->{code}' border='0'></a></td>");
   // -->
   </script>
   ~;
        if ( $col == 23 ) {
            $ret .= "</tr>\n";
            $col = 0;
        }
    }
    if ( $col ) {
        $ret .= "</tr>\n";
        $col = 0;
    }

    $col2 = 0;

    # without javascript
    $ret2 = "<noscript>\n";
    foreach (@color) {
        if ($col2==0) { $ret2 .= "<tr>\n"; }
        $col2++;
        my $colspan = '';
        my $wh = '16';
        if ($_ eq $color[$#color]) {
            $colspan = "colspan='2'";
            $wh = '32';
        }
        my $ecolor = LJ::ehtml($_->{'item'});
        $ret2 .= qq~
   <td $colspan bgcolor='$_->{code}'><img src='/img/dot.gif' width='$wh' height='16' title='$ecolor - $_->{code}' alt='$ecolor - $_->{code}' border='0'></td>
   ~;
        if ( $col2 == 23 ) {
            $ret2 .= "</tr>\n";
            $col2 = 0;
        }
    }
    if ( $col2 ) {
        $ret2 .= "</tr>\n";
        $col2 = 0;
    }


    $ret2 .= "</noscript>";

    $ret .= $ret2;
    $ret .= "</table></td></tr></table>";

    # preview
    $ret .= qq~
   <?p
   <script language='JavaScript' type='text/javascript'>
   <!--
   document.write("<span style='border: 1px solid #666666; padding: 10px; background-color: $bgvalue\; color: $fgvalue\;' id='preview'>$username</span>");
   // -->
   </script>
   p?>
   ~;

    $ret .= "</div></div>\n";

   if ( $u->is_community ) {
       $body .= "<br />$ML{'.disclaimer'}";
   }

    $body .= $ret;

   } # end is_visible if statement

    $body .= "<div id='add_button_bottom'>\n";
    $body .= "<br />\n <?p ";
    # Form submit buttons
    if ($u->is_visible) {
        my $btn = ( $watched || $trusted ) ? $ML{'.btn.modify'} :  BML::ml( '.btn.add', { user => $u->display_name } );
        $body .= "<input type='submit' value=\"$btn\"> ";
    } else {
        $body .= "<input type='submit' name='action:delete' value=\"$ML{'.btn.remove'}\"> \n";
    }

    my $cancel_btn = LJ::ejs($ML{'.btn.cancel'});

    $body .= "<script type='text/javascript' language='Javascript'> \n <!-- \n
       document.write(\"<input type='button' value='$cancel_btn' onclick='history.go(-1); return false;'>\");
        \n // -->\n ";
    $body .= '</script> p?></div>';

    $body .= "</form>";

    return;
}
_code?>
<?page
title=><?_code return $title; _code?>
windowtitle=><?_code return $windowtitle; _code?>
head<=
<?_code return $_[1]->{'head'}; _code?>
<=head
body=><?_code return $body; _code?>
page?>
