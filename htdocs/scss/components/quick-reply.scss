@import "foundation/base";

#qrdiv * {
    box-sizing: border-box;
}

#qrformdiv {
    text-align: left;
    padding: .5em;
    clear: both;

    @media #{$medium-up} {
        padding: .5em 1em;
        max-width: 45rem;
    }

    // .de means warnings/alerts.
    .de {
        font-size: small;
        width: 100%;
    }

    input, button, textarea, select {
        margin-bottom: 3px;
        margin-top: 0;
    }

    input[type="button"], button {
        // Avoids double-tap zoom when tapping "random" repeatedly
        touch-action: manipulation;
    }

    // Avoid *dramatic woodchuck* zoom on mobile
    @media (pointer: coarse) {
        select, textarea, input[type="text"] {
            font-size: 16px;
        }
    }

    // If no grid: vertical stack. ID -> icon preview -> icon controls.
    .qr-meta {

        display: grid;
        grid-column-gap: 5px;
        grid-template-columns: auto 1fr;
        grid-template-rows: auto auto auto;
        grid-template-areas:
            "name name"
            "icon more"
            "icon iconctl";
        .qr-icon {
            margin-bottom: 3px;
            grid-area: icon;
            align-self: self-end;
        }
        .qr-icon-controls {
            grid-area: iconctl;
        }
        .ljuser {
            grid-area: name;
            margin-bottom: 2px;
            font-size: smaller;
        }
        #submitmoreopts {
            grid-area: more;
            justify-self: start;
            align-self: self-end;
        }
    }

    .qr-icon {
        width: 55px;
        height: 55px;

        img {
            max-width: 100%;
            max-height: 100%;

            @supports (object-position: bottom) {
                width: 100%;
                height: 100%;
                object-fit: contain;
                object-position: bottom;
            }
        }

        a, button {
            position: relative;
            display: block;

            width: 100%;
            height: 100%;
            border: none;
            padding: 0;
            margin: 0;
            background: none;
            cursor: pointer;

            &::after {
                position: absolute;

                display: block; // old browsers
                display: flex;  // new browsers
                align-items: flex-end;
                justify-content: center;

                top: 0;
                margin: 0;
                font-size: 11px;
                font-weight: bold;
                opacity: 0;
                background: rgba(255, 255, 255, 0.7); // real old browsers
                background: radial-gradient(
                    circle farthest-side at left 50% bottom -60%,
                    rgba(255, 255, 255, 1.0),
                    rgba(255, 255, 255, 0.85) 50%,
                    rgba(255, 255, 255, 0) 67%
                );
                color: rgba(0, 0, 0, 0.8);
                text-shadow: 0px -1px 3px #fff;
                text-align: center;
                width: 100%;
                height: 100%;
                @include single_transition();
            }

            &:hover, &:focus {
                &::after {
                    opacity: 1;
                }
            }
        }

        a::after {
            content: "View all";
        }

        button::after {
            content: "Browse";
        }

        &.default {
            a, button {
                &::after {
                    opacity: 1;
                }
            }
        }

        // Hide browse button in talkform when JS is disabled
        &.no-label {
            button::after {
                opacity: 0 !important;
            }
        }
    }

    .qr-icon-controls {
        display: flex;
        align-items: flex-end;
        min-width: 0; // let grid shrink it

        #randomicon {
            margin-left: 5px;
        }

        select#prop_picture_keyword {
            margin-left: 0;
            max-width: 100%;
            min-width: 0; // Let grid/flex shrink it
        }
    }

    .qr-subject {
        display: flex;
        align-items: flex-end;

        #subject {
            // size=50 in html is a presentational hint for width, so need to
            // set width to SOMETHING to keep it from messing up the flex.
            width: 70%;
            min-width: 0; // let it shrink
            flex-grow: 1;
            flex-shrink: 1;
        }
    }

    .qr-markup {
        display: flex;
        justify-content: space-between;
        align-items: flex-end;
    }

    .qr-body {
        #body {
            width: 100%;
            -webkit-overflow-scrolling: touch;
        }
    }

    .qr-footer {
        display: flex;
        flex-direction: row-reverse;
        flex-wrap: wrap;
        align-items: flex-start;

        input {
            margin-left: 5px;
            float: right;

            @supports (display: flex) {
                float: none;
            }
        }
    }

    textarea, select, input[type="text"] {
        margin-right: 0; // Fix for old site scheme.
    }

    .invisible {
        // Fix for old site scheme; a ".comment .invisible" rule was setting position: relative.
        position: absolute;
    }
}

