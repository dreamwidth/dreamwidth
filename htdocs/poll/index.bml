<?_c
# This code was forked from the LiveJournal project owned and operated
# by Live Journal, Inc. The code has been modified and expanded by
# Dreamwidth Studios, LLC. These files were originally licensed under
# the terms of the license supplied by Live Journal, Inc, which can
# currently be found at:
#
# http://code.livejournal.org/trac/livejournal/browser/trunk/LICENSE-LiveJournal.txt
#
# In accordance with the original license, this code and all its
# modifications are provided under the GNU General Public License.
# A copy of that license can be found in the LICENSE file included as
# part of this distribution.
_c?>
<?_code
{
    use strict;
    use vars qw(%FORM $title $body %GET);
    use LJ::Poll;

    $title = $ML{'.title'};
    $body = "";

    # answers to checkbox questions are null-separated sequences
    # since our inout correctness check rules out nulls, we change them
    # to commas here rather than inside LJ::Poll::submit() .
    foreach (values %FORM) {
        s/\0/,/g;
    }
    unless (LJ::text_in(\%FORM)) {
        $body = "<?badinput?>";
        return;
    }

    my $remote = LJ::get_remote();

    my $pollid = ($FORM{'id'} || $FORM{'pollid'})+0;

    unless ($pollid) {
        return BML::redirect( "$LJ::SITEROOT/poll/create" );
    }

    my $poll = LJ::Poll->new($pollid);

    unless ($poll && $poll->valid) {
        $title = $ML{'Error'};
        $body = $ML{'.pollnotfound'};
        return;
    }

    my $u = $poll->journal;

    my $mode = "";
    $mode = $FORM{'mode'} if ($FORM{'mode'} =~ /(enter|results|ans|clear)/);

    # Handle opening and closing of polls
    # We do this first because a closed poll will alter how a poll is displayed
    if ( $poll->is_owner( $remote ) || $remote && $remote->can_manage( $u ) ) {
        if ($FORM{'mode'} =~ /(close|open)/) {
            $mode = $FORM{'mode'};
            $poll->close_poll if ($mode eq 'close');
            $poll->open_poll if ($mode eq 'open');
            $mode = 'results' ;
        }
    }

    foreach my $m ([ "enter", $ML{'.filloutpoll'} ], [ "results" , $ML{'.viewresults'} ]) {
        next if ($m->[0] eq "enter" && $poll->is_closed);
        if ($mode eq $m->[0]) {
            $body .= "<b>[ $m->[1] ]</b> ";
        } else {
            $body .= "<a href=\"$LJ::SITEROOT/poll/?id=$pollid&amp;mode=$m->[0]\">[ $m->[1] ]</a> ";
        }
    }

    # load the item being shown
    my $entry = $poll->entry;
    unless ($entry) {
        $body = $ML{'.error.postdeleted'};
        return;
    }

    unless ($entry->visible_to($remote)) {
        $body = $ML{'.error.cantview'};
        return;
    }

    $body .= "<a href='" . $entry->url . "'>[ $ML{'.discuss'} ]</a> ";

    # Links for closing/reopening polls
    if ( $poll->is_owner($remote) || $remote && $remote->can_manage( $u ) ) {
        $body .= $poll->is_closed ?
            "<a href='$LJ::SITEROOT/poll/?id=$pollid&amp;mode=open'>[ $ML{'.reopen'} ]</a> " :
            "<a href='$LJ::SITEROOT/poll/?id=$pollid&amp;mode=close'>[ $ML{'.close'} ]</a> ";
    }

    $body .= "<hr><p>";

    if (defined $FORM{'poll-submit'})
    {
        unless (LJ::did_post()) {
            $title = $ML{'Error'};
            $body  = $ML{'bml.requirepost'};
            return;
        }

        unless (LJ::check_form_auth()) {
            $title = $ML{'Error'};
            $body  = $ML{'error.invalidform'};
            return;
        }

        my $error;
        my $error_code = LJ::Poll->process_submission(\%FORM, \$error);
        if ($error_code eq 2) {
            $body .= $poll->render(mode => "enter");    
            $body .= $error;
            return;
        }
        if ($error) {
            $title = $ML{'Error'};
            $body .= $error;
            return;
        }
        return BML::redirect( $entry->url( style_opts => LJ::viewing_style_opts( %GET ) ) );
    }

    $body .= $poll->render(mode => $mode, qid => $FORM{qid},
                page => $FORM{page}, pagesize => $FORM{pagesize});
    return;
}
_code?><?page
title=><?_code return $title; _code?>
body=><?_code return $body; _code?>
page?>
