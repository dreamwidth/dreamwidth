# This code was forked from the LiveJournal project owned and operated
# by Live Journal, Inc. The code has been modified and expanded by 
# Dreamwidth Studios, LLC. These files were originally licensed under
# the terms of the license supplied by Live Journal, Inc, which can
# currently be found at:
#
# http://code.livejournal.org/trac/livejournal/browser/trunk/LICENSE-LiveJournal.txt
#
# In accordance with the original license, this code and all its
# modifications are provided under the GNU General Public License. 
# A copy of that license can be found in the LICENSE file included as
# part of this distribution.

_parent=>../../lj-bml-blocks.pl

loginboxstyle=>{Ss}background: url(/img/silk/identity/user.png) no-repeat; background-color: #fff; background-position: 0px 1px; padding-left: 18px; color: #00C; font-weight: bold;
commloginboxstyle=>{Ss}background: url(/img/silk/identity/community.png) no-repeat; background-color: #fff; background-position: 0px 2px; padding-left: 19px; color: #00C; font-weight: bold;

SECURITYPRIVATE=>{Ss}<img src="<?imgprefix?>/silk/entry/private.png" alt="private" width=16 height=16 align=absmiddle>
SECURITYPROTECTED=>{Ss}<img src="<?imgprefix?>/silk/entry/locked.png" alt="protected" width=14 height=15 align=absmiddle>
SECURITYGROUPS=>{Ss}<img src="<?imgprefix?>/silk/entry/filtered.png" alt="custom" idth=21 height=13 align=absmiddle>
HELP=>{DR}(<a href="%%data%%"><i>help</i></a>)
INERR=>{DR}<font color="#ff0000"><b>%%data%%</b></font>
SOERROR=>{DR}<div><b>%%data%%</b></div>
EMAILEX=><div style='font-family: courier; border: solid black 1px; padding: 5px;'>%%data%%</div>

BADINPUT<=
<?h1 <?_ml bml.badinput.head _ml?> h1?>
<?p <?_ml bml.badinput.body1 _ml?> p?>
<=BADINPUT

REQUIREPOST=><?_ml bml.requirepost _ml?>

LOAD_PAGE_INFO<=
<?_code
### PLEASE NOTE: This block is deprecated. To print the menu navigation in a scheme,
###              use the <?menunav?> block.

#line 3
@sidebar = ({ 'name' => 'Home',
           'uri' => '/',
           'match' => "^/(index\\.bml)?(\\?.*)?\$",
           'children' => [
                  { 'name' => 'Create Journal',
                'uri' => '/create', },
                  { 'name' => 'Update',
                'uri' => '/update',
#                'children' => [
#                           { 'name' => 'Full Update',
#                         'uri' => '/update?mode=full', }
#                           ],
                },
                  ],
           },
         { 'name' => 'Find Users',
           'children' => [
                         { 'name' => 'Random!',
                'uri' => '/random', },
                         { 'name' => 'By Interest',
                'uri' => '/interests', },
                              { 'name' => 'Search',
                'uri' => '/directorysearch', }
                  ], },
         { 'name' => 'Manage ...',
           uri => '/manage/',
           'children' => [
                  { 'name' => 'Your Profile',
                'uri' => '/manage/profile/', },
                  { 'name' => 'Your Style',
                'uri' => '/customize/', },
                  { 'name' => 'Your Friends',
                'uri' => '/manage/circle/edit', },
                  { 'name' => 'Your Entries',
                'uri' => '/editjournal', },
                  { 'name' => 'Your Pictures',
                'uri' => '/manage/icons', },
                  { 'name' => 'Your Password',
                'uri' => '/changepassword', },
                  ],
       },
         { 'name' => 'Developer Area',
           'uri' => '/developer/',
           'match' => "^/developer/\$",
           'recursematch' => "^/developer/",
           'children' => [
                  { 'name' => 'Style System',
                'uri' => '/developer/styles',
                'children' => [
                           { 'name' => 'View Types',
                         'uri' => '/developer/views', },
                           { 'name' => 'Variable List',
                         'uri' => '/developer/varlist', },
                           ],
                },
                  { 'name' => 'Embedding',
                'uri' => '/developer/embedding', },
                  { 'name' => 'Protocol',
                'uri' => '/developer/protocol',
                'children' => [
                           { 'name' => 'Mode List',
                         'uri' => '/developer/modelist', }
                           ],
                },
                  ],
       },
         { 'name' => 'Need Help?',
           'children' => [
                  { 'name' => 'Lost Password?',
                'uri' => '/lostinfo', },
                  { 'name' => 'FAQ / Guide',
                'uri' => '/support/faq', },
                  { 'name' => 'Support Area',
                'uri' => '/support/', },
                  ],
       },
 );

 my $remote = LJ::get_remote();
 my $remuser = $remote ? $remote->{'user'} : "";
 my $uri = BML::get_uri();
 if ($remuser ne "" && $uri ne "/logout")
 {
     my $subdomain = $remuser;
     $subdomain =~ s/_/-/g;
     unshift @sidebar, { 'name' => "Hello, $remuser!",
             'children' => [
                    { 'name' => 'Your Journal',
                      'children' => [
                             { 'name' => 'Recent',
                               'uri' => "/users/$remuser/", },
                             { 'name' => 'Calendar',
                               'uri' => "/users/$remuser/calendar", },
                             { 'name' => 'Friends',
                               'uri' => "/users/$remuser/read",
                               'extra' => "/friend/filter",
                               },
                             ],
                      },
                    { 'name' => 'User Info',
                      'uri' => "/profile?user=$remuser", },
                    { 'name' => 'Memories',
                      'uri' => "/tools/memories?user=$remuser", },
                    { 'name' => 'Logout',
                      'uri' => '/logout', },
                    ]
                    };
 } elsif ($uri ne "/login") {
     unshift @sidebar, { 'name' => "Log In",
             'uri' => '/login', }
 }

return "";
_code?>
<=LOAD_PAGE_INFO

AL=>{P}<i><a href="%%data1%%">%%data2%%</a></i> <img src="/img/external_link.gif" width='16' height='11' align='absmiddle' />
AWAYLINK=>{P}<i><a href="%%data1%%">%%data2%%</a></i> <img src="/img/external_link.gif" width='16' height='11' align='absmiddle' />

H1=>{D}<h1>%%data%%</h1>
H2=>{D}<h2>%%data%%</h2>

# Banner Header: search results banner, content desriptor, etc...
BH=>{D}<p align='center'><font face="Arial,Helvetica" color="#CC0000" size='-1'><b>%%data%%</b></font>

GRIN=>{S}&lt;grin&gt;
HR=>{S}<hr />

NEWLINE=>{S}<BR>&nbsp;&nbsp;&nbsp;&nbsp;
P=>{D}<p>%%data%%</p>
BLOCK=>{D}<div>%%data%%</div>

STANDOUT<=
{D}<blockquote>
<hr />
%%data%%
<hr />
</blockquote>
<=STANDOUT

ERRORBAR<=
{D}<blockquote>
<hr />
%%data%%
<hr />
</blockquote>
<=ERRORBAR

WARNINGBAR<=
{D}<blockquote>
<hr />
%%data%%
<hr />
</blockquote>
<=WARNINGBAR

BADCONTENT<=
<?h1 <?_ml Error _ml?> h1?>
<?p <?_ml bml.badcontent.body _ml?> p?>
<=BADCONTENT

DE<=
%%data%%
<=DE

EMCOLOR=>{S}#c0c0c0
HOTCOLOR=>{S}#ff0000
EMCOLORLITE=>{S}#e2e2e2
ALTCOLOR1=>{S}#eeeeee
ALTCOLOR2=>{S}#dddddd
screenedbarcolor=>{S}#707070

CHOICE=>{P}<dt><a href="%%data2%%"><font size="+1"><tt><b>%%data1%%</b></tt></font></a><dd><font size="2">%%data3%%</font>

CHOICES<=
{F}<table summary="" width="100%" cellpadding="2" cellspacing="5">
<tr>
<td valign='top' width="50%">
<dl>
%%items%%
</dl>
</td>
<td valign='top' width="50%">
<dl>
%%itemsb%%
</dl>
</td>
</tr>
</table>
<=CHOICES

PAGE<=
{Fp}<html>
<head><title>%%title%%</title>
<?_code LJ::res_includes() _code?>
<link rel="stylesheet" type="text/css" href="<?statprefix?>/lj_base-app.css" />
%%head%%
</head>
<body %%bodyopts%%>
<?_code
    return @errors && scalar @errors ? LJ::error_list(@errors) : '';
_code?>
%%body%%
</body>
</html>
<=PAGE

# Dreamwidth menu structure
menunav<=
<?_code
{
    use DW::Logic::MenuNav;

    my $ret;

    $ret .= "<ul class="left">\n";

    my $nav_links = DW::Logic::MenuNav->get_menu_navigation;   # defaults to remote

    foreach my $cathash ( @{ $nav_links } ) {
        my $cat = $cathash->{name};
        my @submenu = @{ $cathash->{items} };
        my @displayed = ();
        foreach my $item ( @submenu ) {
            push @displayed, "<li class='subnav'><a href='$item->{url}'>" . BML::ml( "$item->{text}", $item->{text_opts} ) . "</a></li>" if $item->{display};
        }
        if ( @displayed ) {   # only display a top-level menu if any of its items are displayed
            $ret .= "<li id='${cat}_topnav' class='topnav has-dropdown'><a href='$LJ::SITEROOT/nav/$cat'>$ML{\"menunav.$cat\"}</a>\n";
            $ret .= "<ul id='${cat}_subnav' class='subnav_container dropdown'>\n";
            $ret .= join( "\n", @displayed ) . "\n";
            $ret .= "</ul>\n";
            $ret .= "</li>\n";
        }
    }

    $ret .= "</ul>\n";

    return $ret;
}
_code?>
<=menunav
