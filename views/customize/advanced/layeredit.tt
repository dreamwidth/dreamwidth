    [%# for error reporting %]
    [%# BLOCK error_msg %]
        [% #<title>Error</title> %]
        [% #<h2>Error</h2> %]
        [% #[% message %]
    [%# END %]
    [%# we need a valid id %]

    [%# PROCESS error_msg message = "You have not specified a layer to edit." UNLESS id %]

    [%# authenticate user; %]

    [%# PROCESS error_msg message = "You must be logged in to edit layers." UNLESS remote %]

        
    [%# PROCESS error_msg message = dw.ml('/customize/advanced/index.bml.error.advanced.editing.denied') IF no_layer_edit %]

    [%# load layer %]

    [%# PROCESS error_msg message = "The specified layer does not exist." UNLESS lay %]

    [%# is authorized admin for this layer? %]
    [%# PROCESS error_msg message = 'You are not authorized to edit this layer.' UNLESS u AND remote.can_manage(u) %]

    [%# check priv and ownership %]
    [%# PROCESS error_msg message = "You are not authorized to edit styles." UNLESS u.can_create_s2_styles %]

    [%# at this point, they are authorized, allow viewing & editing %]


[% sections.title = title _ '- S2 Designer' %]
[% sections.head = BLOCK %]
<script type="text/javascript"><!--
        var s2docBaseURL = "[% site.root %]/doc/s2";
// -->
</script>

<!--[if IE]>
<style type="text/css">
    html {
        overflow: hidden;
    }

    div.reference {
        height: expression(xGetElementById('statusbar').offsetTop - (42 + 9 + 10) + "px");
    }

    div.output {
        width: expression(xGetElementById('statusbar').clientWidth - (18 + xGetElementById('out').offsetLeft) + "px");
                bottom: 45px;
    }

    div.divider {
                font-size: 2px;
    }

        #outputdivider {
                width: expression(xGetElementById('statusbar').clientWidth - (18 + xGetElementById('out').offsetLeft) + "px");
                bottom: 145px;
                height: 7px;
        }

        #refdivider {
                height: expression(xGetElementById('statusbar').offsetTop - (42 + 9 + 10) + "px");
        }

    div.main {
        width: expression(xGetElementById('statusbar').clientWidth - (18 + 6 + xGetElementById('out').offsetLeft) + "px");
        height: expression(xGetElementById('statusbar').offsetTop - (42 - 16 + xGetElementById('out').clientHeight + 57) + "px");
    }

    textarea.maintext {
        width: 100%;
        height: expression(xGetElementById('statusbar').offsetTop - (42 - 16 + xGetElementById('out').clientHeight + 57) + "px");
    }

    #outputtabs {
        width: expression(xGetElementById('statusbar').clientWidth - (18 + 4 + xGetElementById('out').offsetLeft) + "px");
    }
</style>
<![endif]-->

[% END  # sections.head %]


[%- dw.need_res( 'js/s2edit/xlib.js' ) -%]
[%- dw.need_res( 'js/s2edit/s2edit.js' ) -%]
[%- dw.need_res( 'js/s2edit/s2gui.js' ) -%]
[%- dw.need_res( 'js/s2edit/s2parser.js' ) -%]
[%- dw.need_res( 'js/s2edit/s2sense.js' ) -%]
[%- dw.need_res( 'js/s2edit/s2library.js' ) -%]
[%- dw.need_res( 'stc/s2edit.css' ) -%]

<body onMouseMove="s2processDrag(event)" onMouseUp="s2endDrag(event)">
    <form method="post" name="s2" action="" onsubmit="return s2submit()">
    [% dw.form_auth() %]
    <input type="hidden" name="action" value="compile" />

    <div class="header">
        <h1>[% title %]</h1>

        <div class="tools">
            <a href="[% site.root %]/doc/s2" target="_blank">Documentation</a>
        </div>

        <input type="submit" value="Save & Compile" class="compilelink" />

        <a href="layers">[% dw.ml('.advancedlayerlink') %]</a>
    </div>

    <div class="main" id="maindiv">
        <div class="maincontainer">
        <textarea id="main" class="maintext" name="s2code" onKeyPress="s2keyPressed(event)" wrap="off"
                  onKeyDown="s2IETabKeyPressedHandler(event)">[% code %]</textarea>
        </div>
    </div>
        <div class="divider" id="outputdivider" onMouseDown="s2startDrag(event)"
                onMouseUp="s2endDrag(event)"
                onMouseMove="s2processDrag(event)">&nbsp;</div>
    <div class="tabs" id="outputtabs">
        <h2>Build</h2>
    </div>
    <div id="out" class="output">
                [% build %]
    </div>

    <div class="tabs" id="reftabs">
                <span id="navtabs" class="refvisible">
                        <h2>Nav.</h2>
                        <a href="javascript:s2switchRefTab(0)">Classes</a>
                        <a href="javascript:s2switchRefTab(1)">Funcs.</a>
                        <a href="javascript:s2switchRefTab(2)">Props.</a>
                </span>
                <span id="classtabs" class="refinvisible">
                        <a href="javascript:s2switchRefTab(-1)">Nav.</a>
                        <h2>Classes</h2>
                        <a href="javascript:s2switchRefTab(1)">Funcs.</a>
                        <a href="javascript:s2switchRefTab(2)">Props.</a>
                </span>
                <span id="functabs" class="refinvisible">
                        <a href="javascript:s2switchRefTab(-1)">Nav.</a>
                        <a href="javascript:s2switchRefTab(0)">Classes</a>
                        <h2>Funcs.</h2>
                        <a href="javascript:s2switchRefTab(2)">Props.</a>
                </span>
                <span id="proptabs" class="refinvisible">
                        <a href="javascript:s2switchRefTab(-1)">Nav.</a>
                        <a href="javascript:s2switchRefTab(0)">Classes</a>
                        <a href="javascript:s2switchRefTab(1)">Funcs.</a>
                        <h2>Props.</h2>
                </span>
    </div>
    <div id="ref" class="reference">
        <div id="nav" class="refvisible">
                &nbsp;
        </div>
        <div id="classref" class="refinvisible">
                (Classes)
        </div>
        <div id="funcref" class="refinvisible">
                (Functions)
        </div>
        <div id="propref" class="refinvisible">
                (Properties)
        </div>
    </div>

        <div class="divider" id="refdivider" onMouseDown="s2startDragRef(event)"
                onMouseUp="s2endDrag(event)"
                onMouseMove="s2processDrag(event)">&nbsp;</div>

    <div class="statusbar" id="statusbar">
        <div class="gutter"> </div>
        <div id="status">Ready.</div>
    </div>
    
    </form>


</body>
</html>

